67d458f8554b7ab4ba47a9c8

67dce71217b28317bc70544d

Estoy desarrollando un minijuego para mi página web, con HTML, CSS y JavaScript. El juego consiste en mostrar una secuencia de 3 figuras escogidas al azar entre 4 figuras con 2 posibles colores cada una, para un total de 8 diferentes posibilidades. El jugador debe memorizar el orden de la secuencia y las figuras se esconden, al repetir la secuencia en el mismo orden, escogiendo de las 8 posibles figuras, el juego verifica si es correcto o no. De ser correcto, le permite hacer una ronda con una figura adicional en la secuencia a memorizar, de no ser correcto, el juego termina.

Quiero que me ayudes a comprender mejor el código por lo que necesito que comentes sólo encima de la definición de cada una de las funciones personalizadas del código de JavaScript, explicando en una sola línea que hace cada función. Retorna solo el código completo con los comentarios según lo indicado.

```html
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Juego de Memoria</title>
    <style>
      body {
        font-family: sans-serif;
        display: flex;
        justify-content: center;
        align-items: center;
        min-height: 100vh;
        margin: 0;
        background-color: #f0f0f0;
      }

      .game-container {
        display: flex;
        flex-direction: column;
        align-items: center;
      }

      .card-container {
        display: flex;
        gap: 20px;
        margin-bottom: 20px;
      }

      .card {
        width: 100px;
        height: 150px;
        border: 1px solid #ccc;
        background-color: #fff;
        display: flex;
        justify-content: center;
        align-items: center;
        font-size: 2em;
        cursor: pointer;
        user-select: none;
      }

      .shape {
        width: 60px;
        height: 60px;
      }

      .circle.black {
        border-radius: 50%;
        background-color: black;
      }

      .square.black {
        background-color: black;
      }

      .triangle.black {
        width: 0;
        height: 0;
        border-left: 30px solid transparent;
        border-right: 30px solid transparent;
        border-bottom: 60px solid black;
      }

      .star.black {
        position: relative;
        display: block;
        width: 0px;
        height: 0px;
        border-right: 30px solid transparent;
        border-bottom: 21px solid black;
        border-left: 30px solid transparent;
        transform: rotate(35deg);
      }
      .star.black:before {
        border-bottom: 23px solid black;
        border-left: 10px solid transparent;
        border-right: 10px solid transparent;
        position: absolute;
        height: 0;
        width: 0;
        top: -12px;
        left: -20px;
        display: block;
        content: "";
        transform: rotate(-35deg);
      }
      .star.black:after {
        position: absolute;
        display: block;
        color: black;
        top: 3px;
        left: -30px;
        width: 0px;
        height: 0px;
        border-right: 30px solid transparent;
        border-bottom: 21px solid black;
        border-left: 30px solid transparent;
        transform: rotate(-70deg);
        content: "";
      }

      .circle.blue {
        border-radius: 50%;
        background-color: blue;
      }

      .square.blue {
        background-color: blue;
      }

      .triangle.blue {
        width: 0;
        height: 0;
        border-left: 30px solid transparent;
        border-right: 30px solid transparent;
        border-bottom: 60px solid blue;
      }

      .star.blue {
        position: relative;
        display: block;
        width: 0px;
        height: 0px;
        border-right: 30px solid transparent;
        border-bottom: 21px solid blue;
        border-left: 30px solid transparent;
        transform: rotate(35deg);
      }
      .star.blue:before {
        border-bottom: 23px solid blue;
        border-left: 10px solid transparent;
        border-right: 10px solid transparent;
        position: absolute;
        height: 0;
        width: 0;
        top: -12px;
        left: -20px;
        display: block;
        content: "";
        transform: rotate(-35deg);
      }
      .star.blue:after {
        position: absolute;
        display: block;
        color: blue;
        top: 3px;
        left: -30px;
        width: 0px;
        height: 0px;
        border-right: 30px solid transparent;
        border-bottom: 21px solid blue;
        border-left: 30px solid transparent;
        transform: rotate(-70deg);
        content: "";
      }

      #message {
        font-size: 1.2em;
        margin-top: 20px;
      }

      .hidden-shape {
        background-color: #ccc;
      }

      .clickable {
        cursor: pointer;
      }

      .shape-container {
        display: flex;
        justify-content: center;
        align-items: center;
        width: 100%;
        height: 100%;
      }
    </style>
  </head>
  <body>
    <div class="game-container">
      <h1>Juego de Memoria</h1>
      <div class="card-container" id="memoryCards"></div>
      <div class="card-container" id="selectionCards"></div>
      <p id="message"></p>
    </div>

    <script>
      const memoryCardsContainer = document.getElementById("memoryCards");
      const selectionCardsContainer = document.getElementById("selectionCards");
      const messageElement = document.getElementById("message");
      const shapes = [
        { name: "circle", color: "black" },
        { name: "square", color: "black" },
        { name: "triangle", color: "black" },
        { name: "star", color: "black" },
        { name: "circle", color: "blue" },
        { name: "square", color: "blue" },
        { name: "triangle", color: "blue" },
        { name: "star", color: "blue" },
      ];
      let memorySequence = [];
      let playerSequence = [];
      let gameStarted = false;
      let correctTurns = 0;
      let numberOfMemoryCards = 3;

      function createShapeElement(shape) {
        const shapeDiv = document.createElement("div");
        shapeDiv.classList.add("shape", shape.name, shape.color);
        return shapeDiv;
      }

      function generateMemorySequence() {
        memorySequence = [];
        let availableShapes = [...shapes];

        for (let i = 0; i < numberOfMemoryCards; i++) {
          const randomIndex = Math.floor(
            Math.random() * availableShapes.length
          );
          memorySequence.push(availableShapes[randomIndex]);
          availableShapes.splice(randomIndex, 1);
        }
      }

      function displayMemorySequence() {
        generateMemorySequence();
        memoryCardsContainer.innerHTML = "";

        for (let i = 0; i < numberOfMemoryCards; i++) {
          const card = document.createElement("div");
          card.classList.add("card");
          const shapeContainer = document.createElement("div");
          shapeContainer.classList.add("shape-container");
          card.appendChild(shapeContainer);
          memoryCardsContainer.appendChild(card);
        }

        const memoryCards = document.querySelectorAll("#memoryCards .card");

        memoryCards.forEach((card) => {
          card.querySelector(".shape-container").innerHTML = "";
          card.classList.remove("hidden-shape");
        });

        let index = 0;
        const displayInterval = setInterval(() => {
          if (index < memoryCards.length) {
            memoryCards[index]
              .querySelector(".shape-container")
              .appendChild(createShapeElement(memorySequence[index]));
            index++;
          } else {
            clearInterval(displayInterval);
            setTimeout(hideMemorySequence, 1000);
          }
        }, 1000);
      }

      function hideMemorySequence() {
        const memoryCards = document.querySelectorAll("#memoryCards .card");
        memoryCards.forEach((card) => {
          card.querySelector(".shape-container").innerHTML = "";
          card.classList.add("hidden-shape");
        });
        displaySelectionOptions();
      }

      function displaySelectionOptions() {
        selectionCardsContainer.innerHTML = "";
        shapes.forEach((shape) => {
          const card = document.createElement("div");
          card.classList.add("card", "clickable");
          card.dataset.shape = JSON.stringify(shape);
          card.appendChild(createShapeElement(shape));
          card.addEventListener("click", handleShapeSelection);
          selectionCardsContainer.appendChild(card);
        });
        playerSequence = [];
        messageElement.textContent = "Elige las formas en el orden correcto.";
        gameStarted = true;
      }

      function handleShapeSelection(event) {
        if (!gameStarted) return;
        const selectedShape = JSON.parse(event.currentTarget.dataset.shape);
        playerSequence.push(selectedShape);

        if (playerSequence.length === memorySequence.length) {
          gameStarted = false;
          checkResult();
        }
      }

      function checkResult() {
        const isCorrect = memorySequence.every((shape, index) => {
          return (
            shape.name === playerSequence[index].name &&
            shape.color === playerSequence[index].color
          );
        });
        if (isCorrect) {
          messageElement.textContent = "Correcto! Prepárate para la siguiente ronda.";
          correctTurns++;
          numberOfMemoryCards++;
          setTimeout(startNewTurn, 2000);
        } else {
          messageElement.textContent = `Incorrecto! Fin del juego. Memorizaste ${correctTurns} patron(es) correctamente.`;
          numberOfMemoryCards = 3; 
        }
      }

      function startNewTurn() {
        displayMemorySequence();
      }

      displayMemorySequence();
    </script>
  </body>
</html>
```