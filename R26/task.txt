67d45bdd16f416a1f5447a01

67e21c852121b7b4f4f431bd

Soy programador y un apasionado del fútbol. Desarrollé un código en Python para analizar el efecto del rozamiento en la trayectoria de una pelota de fútbol pateada a diferentes velocidades. Este es el código:
```python
import math  

def main():  
    fuerza = float(input("Ingrese la fuerza del golpe (N): "))  
    if fuerza <= 0:  
        print("Error: La fuerza debe ser un número positivo.")  
        return  

    angulo = 45  
    gravedad = 9.81  
    coef_rozamiento = 0.5  
    masa = 0.5  

    # Cálculos para entorno ideal  
    velocidad_ideal = fuerza / 0.5  
    angulo_rad = math.radians(angulo)  
    tiempo_ideal = (2 * velocidad_ideal * math.sin(angulo_rad)) / gravedad  
    distancia_ideal = (velocidad_ideal ** 2 * math.sin(2 * angulo_rad)) / gravedad  

    # Cálculos para entorno con rozamiento  
    velocidad_roz = fuerza / masa  
    vx = velocidad_roz * math.cos(angulo_rad)  
    vy = velocidad_roz * math.sin(angulo_rad)  
    tiempo_roz, x, y = 0, 0, 0  
    dt = 0.01  

    while y >= 0:  
        velocidad_actual = math.sqrt(vx**2 + vy**2)  
        fuerza_roz = 0.5 * 1.225 * math.pi * (0.25/2)**2 * coef_rozamiento * velocidad_actual**2  
        ax = -(fuerza_roz / masa) * (vx / velocidad_actual)  
        ay = -gravedad - (fuerza_roz / masa) * (vy / velocidad_actual)  
        vx += ax * dt  
        vy += ay * dt  
        x += vx * dt  
        y += vy * dt  
        tiempo_roz += dt  

    print("\nResultados:")  
    print(f"Distancia ideal: {distancia_ideal:.2f} m")  
    print(f"Distancia con rozamiento: {x:.2f} m")  
    print(f"Tiempo ideal: {tiempo_ideal:.2f} s")  
    print(f"Tiempo con rozamiento: {tiempo_roz:.2f} s")  

if __name__ == "__main__":  
    main()  
```
Para los cálculos, asumí que la pelota pesa 500 g, tiene un diámetro de 25 cm, se lanza a 45° y posee un coeficiente de rozamiento de 0.5. La velocidad de lanzamiento se ingresa por consola, y el código calcula la trayectoria en un entorno ideal y en otro con rozamiento. Finalmente, muestra la distancia a la queel balón caerá al suelo  en ambos escenarios. 
El código funciona correctamente, pero no sigue buenas prácticas. Necesito que lo refactorices para que separes la lógica de negocio en funciones independientes, claramente diferenciadas entre el entorno ideal y el entorno con rozamiento. Cada bucle for y while tenga un único comentario en la primera línea que explique su propósito general. Agregue docstrings en formato estándar (Google Style) para todas las funciones. Elimines cualquier otro comentario innecesario que no sea el comentario de los bucles o los docstrings. Necesito agregar manejo de errores para validar que el usuario ingrese un valor numerico válido para la fuerza (entre 1 y 2000). Y ademas, definas constantes globales para los parámetros físicos (masa, coeficiente de rozamiento, gravedad, etc.) y evites repetirlos en el código.
